name: 'QCS Docker Build'

on:
  workflow_call:
    inputs:
      buildargsmatrix:
        description: "JSON blob of a map of buildargs which will be formed into a matrix"
        default: '{"dummy":["latest"]}'
        required: false
        type: string
      imagename:
        description: "The Image name template to use (can use template values, the build args from the matrix are available as ${ buildargs.<argname> }"
        required: true
        type: string
      versiontemplate:
        description: "The template to use to construct the version tag (the build args from the matrix are available as ${ buildargs.<argname> }"
        required: false
        default: "__DEFAULT__"
        type: string

jobs:
  dockerbuild:
    strategy:
      matrix: ${{ fromJSON(inputs.buildargsmatrix) }}
      fail-fast: false
    name: 'Docker Build Matrix'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Log in to the Container registry
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Construct params
      uses: actions/github-script@v5
      id: params
      with:
        script: |
          const buildargs = ${{ toJSON(matrix) }}
          let buildargsstr = ''
          let defaultversiontag = ''
          let count = 0
          for (const prop in buildargs) {
            if (count > 0) {
              buildargsstr = buildargsstr+'\n'
            }
            buildargsstr = buildargsstr+`${prop}=${buildargs[prop]}`
            defaultversiontag = defaultversiontag+`${prop}-${buildargs[prop]}`
            single = buildargs[prop]
            count++
          }
          if (count == 1) {
            defaultversiontag = single
          }
          let imagename = `${{inputs.imagename}}`
          let imageversion = defaultversiontag
          if ("${{inputs.versiontemplate}}" != "__DEFAULT__") {
            imageversion = `${{inputs.versiontemplate}}`
          }
          console.log(buildargsstr)
          core.setOutput('buildargs', buildargsstr)
          core.setOutput('imagetag', `ghcr.io/${imagename}:${imageversion}`)
    - name: Docker Build
      uses: docker/build-push-action@v2
      id: build
      with:
        push: false
        build-args: "${{ steps.params.outputs.buildargs }}"

    - name: Docker Push (Master Branch Only)
      uses: docker/build-push-action@v2
      id: push
      if: github.ref == 'refs/heads/master'
      with:
        push: true
        tags: ${{ steps.params.outputs.imagetag }}
        build-args: ${{ steps.params.outputs.buildargs }}
  
 
  build_success:
    runs-on: ubuntu-latest
    needs: dockerbuild
    name: 'Docker Build'
    steps:
    - name: "Pointless Step"
      run: echo "This step only runs if all matrix branches work, it gives an overall status for all branches of the matrix"
